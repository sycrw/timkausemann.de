<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tim Kausemann</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Tim Kausemann</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2024 Tim Kausemann</copyright>
    <lastBuildDate>Tue, 29 Oct 2024 08:43:09 +0100</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple Cicd Setup</title>
      <link>http://localhost:1313/posts/simple-cicd-setup/</link>
      <pubDate>Tue, 29 Oct 2024 08:43:09 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/simple-cicd-setup/</guid>
      <description>Almost every software developer has built some kind of side project, which is great. But there are so many projects that never leave local and are only visible through a GitHub repository. Because of this, here is my simple ci-cd setup, which makes deploying applications easy. The goal of the setup is not high availability, or to handle much load, but it should be a starting point for any small application.</description>
      
    </item>
    
    <item>
      <title>Tasmota Exporter</title>
      <link>http://localhost:1313/projects/tasmota-export/</link>
      <pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/tasmota-export/</guid>
      <description>sycrw/tasmota-export export tasmota smart plug data TypeScript 0 0 What? # This project aims to save and store the data like power usage, from a tasmota smart plug.
How # It all starts with the tasmota device sending its telemetry data via a mqtt broker (in this case, mosquitto) to a python app, which saves it into an influxdb. Python was chosen for this task, as it had the easiest to work with a client library for mqtt and influxdb.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/projects/tasmota-export/feature-tasmota-export.png" />
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sat, 31 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description>A student at the Technische Universität München studying informatiks(computer science). Meanwhile i am also a working student a Check24.
Experience # Software Development Working Student Sep. 2023 - Check24 Finanzen GmbH Developed an internal tool from scratch using NextJS, enhancing monitoring and tracking of customers for stakeholders Assisted in migrating legacy monolithic applications relying on Oracle database, into a modern microservice architecture using percona Software Development Intern Jul. 2023 - Aug.</description>
      
    </item>
    
    <item>
      <title>MusicAnalyzer</title>
      <link>http://localhost:1313/projects/musicanalyzer/</link>
      <pubDate>Sat, 31 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/projects/musicanalyzer/</guid>
      <description>Music Analyzer is a tool to extract listening data from your spotify account. It was created, so you did not have to wait till the end of the year for spotify wrapped to get all your listing data.
The Beginnings # The project got launched within the Code Club Scholarship. Together with two fellow scholars we set out to create this project.
Tech Stack # We chose Next.js as a full stack framework, since at this time none of use had experience with React, hoping to learn it along the way.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:1313/projects/musicanalyzer/feature-musicanalyzer.png" />
    </item>
    
  </channel>
</rss>
